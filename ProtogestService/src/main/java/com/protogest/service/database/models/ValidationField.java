package com.protogest.service.database.models;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.protogest.model.form.nosql.ProtocoleInstance;

import java.util.ArrayList;
import java.util.List;

@DynamoDBTable(tableName = "validation_field")
public class ValidationField {

    public static ValidationField from(ProtocoleInstance.FormField field) {
        ValidationField validationField = new ValidationField();
        validationField.setType(EFieldType.valueOf(field.getType().toString()));
        validationField.setProposedById(field.getValue());
        validationField.setFieldId(field.getId());
        return validationField;
    }

    private String validationFieldId;
    private UserForm userForm;
    private String fieldId;
    private String proposedById;
    private String proposedValue;
    private EFieldType type;
    private List<FieldApprobation> approbations = new ArrayList<>();

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getValidationFieldId() {
        return validationFieldId;
    }

    public void setValidationFieldId(String validationFieldId) {
        this.validationFieldId = validationFieldId;
    }

    @DynamoDBTypeConvertedJson
    @DynamoDBAttribute
    public UserForm getUserForm() {
        return userForm;
    }

    public void setUserForm(UserForm userForm) {
        this.userForm = userForm;
    }

    @DynamoDBAttribute
    public String getFieldId() {
        return fieldId;
    }

    public void setFieldId(String fieldId) {
        this.fieldId = fieldId;
    }

    @DynamoDBAttribute
    public String getProposedById() {
        return proposedById;
    }

    public void setProposedById(String proposedById) {
        this.proposedById = proposedById;
    }

    @DynamoDBAttribute
    public String getProposedValue() {
        return proposedValue;
    }

    public void setProposedValue(String proposedValue) {
        this.proposedValue = proposedValue;
    }

    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute
    public EFieldType getType() {
        return type;
    }

    public void setType(EFieldType type) {
        this.type = type;
    }


    @DynamoDBTypeConvertedJson
    @DynamoDBAttribute
    public List<FieldApprobation> getApprobations() {
        return approbations;
    }

    public void setApprobations(List<FieldApprobation> approbations) {
        this.approbations = approbations;
    }

    public void addAppobation(FieldApprobation approbation) {
        approbations.add(approbation);
    }
}
